[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "example-app"
version = "0.1.0"
description = "Python example app incorporating best practices"
authors = [{ name = "yxtay", email = "wyextay@gmail.com" }]
license = "MIT"
requires-python = "~=3.11"
dependencies = ["fastapi[all]", "gunicorn", "loguru", "sqlmodel", "typer"]

[dependency-groups]
dev = [
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-env",
  "pytest-mock",
  "pytest-xdist",
]

[tool.isort]
profile = "black"
float_to_top = true
src_paths = [".", "src", "tests"]

[[tool.mypy.overrides]]
module = "gunicorn.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "-v",
  "--strict-markers",
  "--import-mode=importlib",
  "--cov=src",
]

[tool.ruff]
fix = true
src = [".", "src", "tests"]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D",      # pydocstyle
  "E501",   # line-too-long
  "COM812", # missing-trailing-comma # conflicts with ruff formatter
  "ISC001", # single-line-implicit-string-concatenation # conflicts with ruff formatter
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
  "S101", # assert
]
